networks:
  database:
    driver: bridge
  backend:
    driver: bridge
  frontend:
    driver: bridge

services:
  traefik:
    image: traefik:v3.2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls=true

  database:
    image: postgres:alpine
    restart: unless-stopped
    env_file:
      - ./backend/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - database

  backend:
    depends_on:
      - database
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    networks:
      - database
      - backend
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls=true
      - traefik.http.services.backend.loadbalancer.server.port=3333

  back-office:
    depends_on:
      - backend
    build:
      context: ./back-office
    env_file:
      - ./back-office/.env
    networks:
      - backend
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.backoffice.entrypoints=websecure
      - traefik.http.routers.backoffice.tls=true

volumes:
  pgdata:
  traefik-certs: