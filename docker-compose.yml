networks:
  database:
    driver: bridge
  backend:
    driver: bridge
  frontend:
    driver: bridge

services:
  traefik:
    image: traefik:v3.2
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - backend
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls=true

  database:
    image: postgres:alpine
    restart: unless-stopped
    env_file:
      - ./backend/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - database

  backend:
    depends_on:
      - database
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    networks:
      - database
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`api.localhost`)
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls=true
      - traefik.http.services.backend.loadbalancer.server.port=3333

  back-office:
    depends_on:
      - backend
    build:
      context: ./back-office
    env_file:
      - ./back-office/.env
    networks:
      - backend
      - frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.backoffice.rule=Host(`admin.localhost`)
      - traefik.http.routers.backoffice.entrypoints=websecure
      - traefik.http.routers.backoffice.tls=true
      - traefik.http.services.backoffice.loadbalancer.server.port=4200

volumes:
  pgdata:
  traefik-certs: