name: SonarQube Scan

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

permissions:
  contents: read

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            backend/package-lock.json
            back-office/package-lock.json
            front-mobile/package-lock.json

      # - name: Install backend dependencies
      #   run: npm ci
      #   working-directory: backend

      # - name: Run backend tests with coverage
      #   env:
      #     NODE_ENV: test
      #   run: npm run test -- --coverage
      #   working-directory: backend

      # - name: Install back-office dependencies
      #   run: npm ci
      #   working-directory: back-office

      # - name: Run back-office tests with coverage
      #   env:
      #     CI: "true"
      #     CHROME_BIN: /usr/bin/google-chrome
      #   run: |
      #     npm run test -- --watch=false --code-coverage --browsers=ChromeHeadless
      #   working-directory: back-office

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dproject.settings=sonar-project.properties

      - name: SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
